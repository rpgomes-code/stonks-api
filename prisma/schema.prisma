// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Application {
  id             String         @id @default(uuid())
  appSlug        String         @unique @map("app_slug")
  appIp          String         @unique @map("app_ip")
  isActive       Boolean        @default(false) @map("is_active")
  createdAt      DateTime       @default(now()) @map("created_at")
  updatedAt      DateTime       @updatedAt @map("updated_at")
  appAccesses    AppAccess[]
  accessTokens   AccessToken[]
  methodAccesses MethodAccess[]
  logs           Log[]

  @@map("applications")
}

model AppAccess {
  id          String      @id @default(uuid())
  appId       String      @map("app_id")
  isActive    Boolean     @default(false) @map("is_active")
  expiresAt   DateTime    @map("expires_at")
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @updatedAt @map("updated_at")
  application Application @relation(fields: [appId], references: [id])

  @@map("app_accesses")
}

model MethodAccess {
  id          String      @id @default(uuid())
  appId       String      @map("app_id")
  method      String
  isActive    Boolean     @default(false) @map("is_active")
  expiresAt   DateTime    @map("expires_at")
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @updatedAt @map("updated_at")
  application Application @relation(fields: [appId], references: [id])

  @@map("method_accesses")
}

model AccessToken {
  id          String      @id @default(uuid())
  appId       String      @map("app_id")
  token       String
  isActive    Boolean     @default(false) @map("is_active")
  expiresAt   DateTime    @map("expires_at")
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @updatedAt @map("updated_at")
  application Application @relation(fields: [appId], references: [id])

  @@map("access_tokens")
}

model Log {
  id          String      @id @default(uuid())
  appId       String      @map("app_id")
  method      String
  message     String
  httpCode    Int         @default(200) @map("http_code")
  isError     Boolean     @default(false) @map("is_error")
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @updatedAt @map("updated_at")
  application Application @relation(fields: [appId], references: [id])

  @@map("logs")
}
